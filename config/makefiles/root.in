# Copyright (C) 2008-2009, Parrot Foundation.
# $Id$

## arguments we want to run parrot with
PARROT_ARGS   =

## configuration settings
VERSION       = @versiondir@
BIN_DIR       = @bin_dir@
LIB_DIR       = @lib_dir@$(VERSION)
DOC_DIR       = @doc_dir@$(VERSION)
MANDIR        = @mandir@$(VERSION)

# Set up extensions
O             = @o@

# Various paths
PERL6GRAMMAR  = $(LIB_DIR)/library/PGE/Perl6Grammar.pbc
NQP           = $(LIB_DIR)/languages/nqp/nqp.pbc
PCT           = $(LIB_DIR)/library/PCT.pbc
PMC_DIR       = src/pmc
OPS_DIR       = src/ops

## Setup some commands
MAKE          = @make_c@
PERL          = @perl@
CAT           = @cat@
CHMOD         = @chmod@
CP            = @cp@
MKPATH        = @mkpath@
RM_F          = @rm_f@
RM_RF         = @rm_rf@
POD2MAN       = pod2man
#IF(parrot_is_shared and not(cygwin or win32)):export LD_RUN_PATH := @blib_dir@:$(LD_RUN_PATH)
PARROT        = ../../parrot@exe@
PBC_TO_EXE    = ../../pbc_to_exe@exe@
#IF(darwin):
#IF(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
#IF(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@


build: markdown.pbc

all: build markdown@exe@ installable

SOURCES = \
  markdown.pir \
  src/Compiler.pir \
  src/Node.pir \
  src/gen_grammar.pir \
  src/gen_actions.pir \
  src/gen_builtins.pir

BUILTINS_PIR = \
  src/builtins/length.pir

DOCS = README

# the default target
markdown.pbc: $(SOURCES)
	$(PARROT) $(PARROT_ARGS) -o markdown.pbc markdown.pir

markdown@exe@: markdown.pbc
	$(PBC_TO_EXE) markdown.pbc

src/gen_grammar.pir: $(PERL6GRAMMAR) src/parser/grammar.pg
	$(PARROT) $(PARROT_ARGS) $(PERL6GRAMMAR) \
	    --output=src/gen_grammar.pir \
	    src/parser/grammar.pg

src/gen_actions.pir: $(NQP) $(PCT) src/parser/actions.pm
	$(PARROT) $(PARROT_ARGS) $(NQP) --output=src/gen_actions.pir \
	    --target=pir src/parser/actions.pm

src/gen_builtins.pir: $(BUILTINS_PIR)
	$(CAT) $(BUILTINS_PIR) > src/gen_builtins.pir

installable: installable_markdown@exe@

installable_markdown@exe@: markdown.pbc
	$(PBC_TO_EXE) markdown.pbc --install

# regenerate the Makefile
Makefile: config/makefiles/root.in
	$(PERL) Configure.pl

# This is a listing of all targets, that are meant to be called by users
help:
	@echo ""
	@echo "Following targets are available for the user:"
	@echo ""
	@echo "  build:             markdown.pbc"
	@echo "                     This is the default."
	@echo "  all:               markdown.pbc markdown@exe@ installable"
	@echo "  installable:       Create libs and self-hosting binaries to be installed."
	@echo "  install:           Install the installable targets and docs."
	@echo ""
	@echo "Testing:"
	@echo "  test:              Run the test suite."
	@echo "  testclean:         Clean up test results."
	@echo ""
	@echo "Cleaning:"
	@echo "  clean:             Basic cleaning up."
	@echo "  realclean:         Removes also files generated by 'Configure.pl'"
	@echo "  distclean:         Removes also anything built, in theory"
	@echo ""
	@echo "Misc:"
	@echo "  help:              Print this help message."
	@echo ""

test: build
	$(PERL) t/harness

spectest: all t/MarkdownTest_1.0
	$(PERL) t/harness

t/MarkdownTest_1.0.zip:
	cd t && perl -MLWP::Simple -e "getstore(q{http:////daringfireball.net//projects//downloads//MarkdownTest_1.0.zip}, q{MarkdownTest_1.0.zip});"

t/MarkdownTest_1.0: t/MarkdownTest_1.0.zip
	cd t && perl -MArchive::Zip -e "Archive::Zip->new(q{MarkdownTest_1.0.zip})->extractTree();"

codetest: codetest-c codetest-make codetest-perl codetest-pir codetest-pod

T_MAKE  = config//makefiles//root.in
T_PERL  = Configure.pl t//harness t//*.t t//Parrot//Test//*.pm
T_PIR   = markdown.pir src//Compiler.pir src//Node.pir src//builtins//length.pir

codetest-c:

codetest-make:
	- $(PERL) @build_dir@/t/codingstd/copyright.t $(T_MAKE)
	- $(PERL) @build_dir@/t/codingstd/filenames.t $(T_MAKE)
	- $(PERL) @build_dir@/t/codingstd/make_code_coda.t $(T_MAKE)
	- $(PERL) @build_dir@/t/codingstd/linelength.t $(T_MAKE)
	- $(PERL) @build_dir@/t/codingstd/trailing_space.t $(T_MAKE)

codetest-perl:
	- $(PERL) @build_dir@/t/codingstd/copyright.t $(T_PERL)
	- $(PERL) @build_dir@/t/codingstd/cuddled_else.t $(T_PERL)
	- $(PERL) @build_dir@/t/codingstd/filenames.t $(T_PERL)
	- $(PERL) @build_dir@/t/codingstd/linelength.t $(T_PERL)
	- $(PERL) @build_dir@/t/codingstd/perlcritic.t $(T_PERL)
	- $(PERL) @build_dir@/t/codingstd/trailing_space.t $(T_PERL)
	- $(PERL) @build_dir@/t/doc/pod.t $(T_PERL)

codetest-pir:
	- $(PERL) @build_dir@/t/codingstd/copyright.t $(T_PIR)
	- $(PERL) @build_dir@/t/codingstd/filenames.t $(T_PIR)
	- $(PERL) @build_dir@/t/codingstd/linelength.t $(T_PIR)
	- $(PERL) @build_dir@/t/codingstd/pir_code_coda.t $(T_PIR)
	- $(PERL) @build_dir@/t/codingstd/tabs.t $(T_PIR)
	- $(PERL) @build_dir@/t/codingstd/trailing_space.t $(T_PIR)
	- $(PERL) @build_dir@/t/doc/pod.t $(T_PIR)

codetest-pod:


install: installable
	$(CP) installable_markdown@exe@ $(BIN_DIR)/parrot-markdown@exe@
	$(CHMOD) 0755 $(BIN_DIR)/parrot-markdown@exe@
	-$(MKPATH) $(LIB_DIR)/languages/markdown
	$(CP) markdown.pbc $(LIB_DIR)/languages/markdown/markdown.pbc
	-$(MKPATH) $(MANDIR)/man1
	$(POD2MAN) markdown.pir > $(MANDIR)/man1/parrot-markdown.1
	-$(MKPATH) $(DOC_DIR)/languages/markdown
	$(CP) $(DOCS) $(DOC_DIR)/languages/markdown

uninstall:
	$(RM_F) $(BIN_DIR)/parrot-markdown@exe@
	$(RM_RF) $(LIB_DIR)/languages/markdown
	$(RM_F) $(MANDIR)/man1/parrot-markdown.1
	$(RM_RF) $(DOC_DIR)/languages/markdown

win32-inno-installer: installable
	-$(MKPATH) man/man1
	$(POD2MAN) markdown.pir > man/man1/parrot-markdown.1
	-$(MKPATH) man/html
	pod2html --infile markdown.pir --outfile man/html/parrot-markdown.html
	$(CP) installable_markdown@exe@ parrot-markdown.exe
	cd @build_dir@ && $(PERL) tools/dev/mk_inno_language.pl markdown
	cd @build_dir@ && iscc parrot-markdown.iss

TEST_CLEANUPS = \
  "t/*.html" \
  "t/*.text"

testclean:
	$(RM_RF) t/MarkdownTest_1.0
	$(RM_F) $(TEST_CLEANUPS)

CLEANUPS = \
  markdown.pbc \
  "src/gen_*.pir" \
  "*.c" \
  "*$(O)" \
  markdown@exe@ \
#IF(win32):  parrot-markdown.exe \
  installable_markdown@exe@

clean: testclean
	$(RM_F) $(CLEANUPS)

realclean: clean
	$(RM_F) Makefile t/MarkdownTest_1.0.zip

distclean: realclean

# Local variables:
#   mode: makefile
# End:
# vim: ft=make:

