# Copyright (C) 2008-2009, Parrot Foundation.
# $Id$

## arguments we want to run parrot with
PARROT_ARGS   :=

## configuration settings
VERSION       := @versiondir@
BIN_DIR       := @bindir@
LIB_DIR       := @libdir@$(VERSION)
DOC_DIR       := @docdir@$(VERSION)
MANDIR        := @mandir@$(VERSION)

# Set up extensions
O             := @o@

# Various paths
PERL6GRAMMAR  := $(LIB_DIR)/library/PGE/Perl6Grammar.pbc
NQP           := $(LIB_DIR)/languages/nqp/nqp.pbc
PCT           := $(LIB_DIR)/library/PCT.pbc

## Setup some commands
PERL          := @perl@
CHMOD         := @chmod@
CP            := @cp@
MKPATH        := @mkpath@
RM_F          := @rm_f@
RM_RF         := @rm_rf@
POD2MAN       := pod2man
PARROT        := $(BIN_DIR)/parrot@exe@
PBC_TO_EXE    := $(BIN_DIR)/pbc_to_exe@exe@
#IF(darwin):
#IF(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
#IF(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@


SOURCES := \
  markdown/Compiler.pir \
  markdown/Node.pir \
  markdown/gen_grammar.pir \
  markdown/gen_actions.pir \
  markdown/builtins.pir \
  markdown/builtins/is_strict.pir \
  markdown/builtins/length.pir

DOCS := README

BUILD_CLEANUPS := \
  man \
  markdown/markdown.pbc \
  markdown.pbc \
  "markdown/gen_*.pir" \
  "*.c" \
  "*$(O)" \
#IF(win32):  parrot-markdown.exe \
#IF(win32):  parrot-markdown.iss \
#IF(win32):  "setup-parrot-*.exe" \
  installable_markdown@exe@

TEST_CLEANUPS := \
  t/MarkdownTest_1.0

# the default target
build: markdown/markdown.pbc markdown.pbc

all: build installable

markdown/markdown.pbc: $(SOURCES)
	$(PARROT) $(PARROT_ARGS) -o markdown/markdown.pbc markdown/Compiler.pir

markdown.pbc: markdown.pir
	$(PARROT) $(PARROT_ARGS) -o markdown.pbc markdown.pir

markdown/gen_grammar.pir: $(PERL6GRAMMAR) markdown/parser/grammar.pg
	$(PARROT) $(PARROT_ARGS) $(PERL6GRAMMAR) \
	    --output=markdown/gen_grammar.pir \
	    markdown/parser/grammar.pg

markdown/gen_actions.pir: $(NQP) markdown/parser/actions.pm
	$(PARROT) $(PARROT_ARGS) $(NQP) --output=markdown/gen_actions.pir \
	    --target=pir markdown/parser/actions.pm

installable: installable_markdown@exe@

installable_markdown@exe@: markdown.pbc
	$(PBC_TO_EXE) markdown.pbc --install

Makefile: Makefile.in
	$(PARROT) Configure.pir

# This is a listing of all targets, that are meant to be called by users
help:
	@echo ""
	@echo "Following targets are available for the user:"
	@echo ""
	@echo "  build:             markdown.pbc"
	@echo "                     This is the default."
	@echo "  all:               markdown.pbc installable"
	@echo "  installable:       Create libs and self-hosting binaries to be installed."
	@echo "  install:           Install the installable targets and docs."
	@echo ""
	@echo "Testing:"
	@echo "  test:              Run the test suite."
	@echo "  testclean:         Clean up test results."
	@echo ""
	@echo "Cleaning:"
	@echo "  clean:             Basic cleaning up."
	@echo "  realclean:         Removes also files generated by 'Configure.pl'"
	@echo "  distclean:         Removes also anything built, in theory"
	@echo ""
	@echo "Misc:"
	@echo "  help:              Print this help message."
	@echo ""

test: build
	prove --exec=$(PARROT) t//*.t

spectest: build t/MarkdownTest_1.0
	prove --exec=$(PARROT) t//*.t

t/MarkdownTest_1.0.zip:
	cd t && perl -MLWP::Simple -e "getstore(q{http:////daringfireball.net//projects//downloads//MarkdownTest_1.0.zip}, q{MarkdownTest_1.0.zip});"

t/MarkdownTest_1.0: t/MarkdownTest_1.0.zip
	cd t && perl -MArchive::Zip -e "Archive::Zip->new(q{MarkdownTest_1.0.zip})->extractTree();"

codetest: codetest-c codetest-make codetest-perl codetest-pir codetest-pod

T_MAKE  := Makefile.in
T_PIR   := markdown.pir markdown//Compiler.pir markdown//Node.pir markdown//builtins//length.pir \
           Configure.pir t/*.t

codetest-c:

codetest-make:
	- $(PERL) -I@build_dir@/lib @build_dir@/t/codingstd/copyright.t $(T_MAKE)
	- $(PERL) -I@build_dir@/lib @build_dir@/t/codingstd/filenames.t $(T_MAKE)
	- $(PERL) -I@build_dir@/lib @build_dir@/t/codingstd/make_code_coda.t $(T_MAKE)
	- $(PERL) -I@build_dir@/lib @build_dir@/t/codingstd/linelength.t $(T_MAKE)
	- $(PERL) -I@build_dir@/lib @build_dir@/t/codingstd/trailing_space.t $(T_MAKE)

codetest-perl:

codetest-pir:
	- $(PERL) -I@build_dir@/lib @build_dir@/t/codingstd/copyright.t $(T_PIR)
	- $(PERL) -I@build_dir@/lib @build_dir@/t/codingstd/filenames.t $(T_PIR)
	- $(PERL) -I@build_dir@/lib @build_dir@/t/codingstd/pir_code_coda.t $(T_PIR)
	- $(PERL) -I@build_dir@/lib @build_dir@/t/codingstd/tabs.t $(T_PIR)
	- $(PERL) -I@build_dir@/lib @build_dir@/t/codingstd/trailing_space.t $(T_PIR)

codetest-pod:

install: installable
	$(CP) installable_markdown@exe@ $(BIN_DIR)/parrot-markdown@exe@
	$(CHMOD) 0755 $(BIN_DIR)/parrot-markdown@exe@
	-$(MKPATH) $(LIB_DIR)/languages/markdown
	$(CP) markdown/markdown.pbc $(LIB_DIR)/languages/markdown/markdown.pbc
	-$(MKPATH) $(MANDIR)/man1
	$(POD2MAN) markdown.pir > $(MANDIR)/man1/parrot-markdown.1
	-$(MKPATH) $(DOC_DIR)/languages/markdown
	$(CP) $(DOCS) $(DOC_DIR)/languages/markdown

uninstall:
	$(RM_F) $(BIN_DIR)/parrot-markdown@exe@
	$(RM_RF) $(LIB_DIR)/languages/markdown
	$(RM_F) $(MANDIR)/man1/parrot-markdown.1
	$(RM_RF) $(DOC_DIR)/languages/markdown

win32-inno-installer: installable
	-$(MKPATH) man/man1
	$(POD2MAN) markdown.pir > man/man1/parrot-markdown.1
	-$(MKPATH) man/html
	pod2html --infile markdown.pir --outfile man/html/parrot-markdown.html
	$(CP) installable_markdown@exe@ parrot-markdown.exe
	$(PERL) -I$(LIB_DIR)/tools/lib $(LIB_DIR)/tools/dev/mk_inno_language.pl markdown
	iscc parrot-markdown.iss

testclean:
	$(RM_RF) $(TEST_CLEANUPS)

clean:
	$(RM_RF) $(TEST_CLEANUPS) $(BUILD_CLEANUPS)

realclean:
	$(RM_F) $(TEST_CLEANUPS) $(BUILD_CLEANUPS) Makefile t/MarkdownTest_1.0.zip

distclean: realclean

# Local variables:
#   mode: makefile
# End:
# vim: ft=make:

